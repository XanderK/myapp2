//- Управление каталогом
extends layout

block content
  header
    .container.my-2
      ol.breadcrumb
        li.breadcrumb-item
          a(href="/") Главная
        li.breadcrumb-item.active #{title}
  
  .container
    h1 #{title}
    p Здесь добавляются в каталог новые запчасти, редактируются и удаляются существующие.

  .container
    .row.justify-content-end
      .col-auto
        h2 Список запчастей
      .col.d-flex.justify-content-end
        //-
         form(action="/admin/users/new" novalidate)
        a(href="/admin/catalog/new")
          button.btn.btn-primary Новая запчасть
  
  if products.length > 0
    .container.mt-2
      table.table.table-hover
        thead.thead-dark
          tr
            th(scope="col") Фото
            th(scope="col") Модель
            th(scope="col") Мотор
            th(scope="col") Название запчасти
            th(scope="col") Описание
            th(scope="col") Ответственный
            th(scope="col") Автор
            th(scope="col") Создание
            th(scope="col") Действия
        tbody
          each product, index in products
            tr
              th(scope="row")= index + 1
              td= product.model.brand.name + " " + product.model.name + ", " + product.year
              td= product.engine
              td= product.name
              td= product.description
              td= product.responsible
              td= product.owner.name
              td= product.createdText
              td
                .row
                  .col
                    form(method='POST', action="/admin/catalog/edit", novalidate)
                      input(type="hidden", name="id", value=product._id)
                      button.btn.btn-link.p-0
                        i.material-icons.success create
                  .col
                    a(href="#", data-toggle="modal", data-target="#deleteProductModal", data-productName=( product.name + " (" + product.model.brand.name + " " + product.model.name + ", " + product.year + ")"), data-productId=product._id)
                      i.material-icons.danger delete

block scripts              
  //- модальное окно подтверждения удаления
  #deleteProductModal.modal.fade(tabindex="-1" role="dialog" aria-labelledby="deleteProductModalLabel" aria-hidden="true")
    .modal-dialog(role="document")
      .modal-content
        .modal-header
          h5#deleteProductModalLabel.modal-title Удаление элемента каталога
          button(type="button" class="close" data-dismiss="modal" aria-label="Close")
            span(aria-hidden="true") &times;
        .modal-body 
        .modal-footer
          button.btn.btn-secondary(type="button" data-dismiss="modal") Отмена
          form(method='POST', action="/admin/catalog/delete", novalidate)
            input.productId(type="hidden", name="id")
            button.btn.btn-primary Удалить
  script.
    'use strict';
    $('#deleteProductModal').on('show.bs.modal', (event) => {
      var element = $(event.relatedTarget) // Button that triggered the modal
      var productName = element.data('productname') // Extract info from data-* attributes
      var productId = element.data('productid') // Extract info from data-* attributes
      // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
      // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
      var modal = $(this)
      modal.find('.modal-body').text('Элемент "' + productName + '" будет удален из каталога. Продолжить?')
      modal.find('.productId').val(productId)
    })
